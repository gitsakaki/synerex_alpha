// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleet/fleet.proto

package fleet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FleetService struct {
	// Types that are valid to be assigned to Fservice:
	//	*FleetService_ShareRide
	//	*FleetService_Deliver
	Fservice             isFleetService_Fservice `protobuf_oneof:"fservice"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FleetService) Reset()         { *m = FleetService{} }
func (m *FleetService) String() string { return proto.CompactTextString(m) }
func (*FleetService) ProtoMessage()    {}
func (*FleetService) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f79d0ca0aea0c, []int{0}
}

func (m *FleetService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FleetService.Unmarshal(m, b)
}
func (m *FleetService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FleetService.Marshal(b, m, deterministic)
}
func (m *FleetService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FleetService.Merge(m, src)
}
func (m *FleetService) XXX_Size() int {
	return xxx_messageInfo_FleetService.Size(m)
}
func (m *FleetService) XXX_DiscardUnknown() {
	xxx_messageInfo_FleetService.DiscardUnknown(m)
}

var xxx_messageInfo_FleetService proto.InternalMessageInfo

type isFleetService_Fservice interface {
	isFleetService_Fservice()
}

type FleetService_ShareRide struct {
	ShareRide *FleetService_ShareRideSerivce `protobuf:"bytes,1,opt,name=share_ride,json=shareRide,proto3,oneof"`
}

type FleetService_Deliver struct {
	Deliver *FleetService_DeliverSerivce `protobuf:"bytes,2,opt,name=deliver,proto3,oneof"`
}

func (*FleetService_ShareRide) isFleetService_Fservice() {}

func (*FleetService_Deliver) isFleetService_Fservice() {}

func (m *FleetService) GetFservice() isFleetService_Fservice {
	if m != nil {
		return m.Fservice
	}
	return nil
}

func (m *FleetService) GetShareRide() *FleetService_ShareRideSerivce {
	if x, ok := m.GetFservice().(*FleetService_ShareRide); ok {
		return x.ShareRide
	}
	return nil
}

func (m *FleetService) GetDeliver() *FleetService_DeliverSerivce {
	if x, ok := m.GetFservice().(*FleetService_Deliver); ok {
		return x.Deliver
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FleetService) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FleetService_ShareRide)(nil),
		(*FleetService_Deliver)(nil),
	}
}

type FleetService_ShareRideSerivce struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	OccupiedSeats        int32    `protobuf:"varint,2,opt,name=occupied_seats,json=occupiedSeats,proto3" json:"occupied_seats,omitempty"`
	AvailableSeats       int32    `protobuf:"varint,3,opt,name=available_seats,json=availableSeats,proto3" json:"available_seats,omitempty"`
	NonSmoking           bool     `protobuf:"varint,4,opt,name=non_smoking,json=nonSmoking,proto3" json:"non_smoking,omitempty"`
	PricePerKm           int32    `protobuf:"varint,5,opt,name=price_per_km,json=pricePerKm,proto3" json:"price_per_km,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FleetService_ShareRideSerivce) Reset()         { *m = FleetService_ShareRideSerivce{} }
func (m *FleetService_ShareRideSerivce) String() string { return proto.CompactTextString(m) }
func (*FleetService_ShareRideSerivce) ProtoMessage()    {}
func (*FleetService_ShareRideSerivce) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f79d0ca0aea0c, []int{0, 0}
}

func (m *FleetService_ShareRideSerivce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FleetService_ShareRideSerivce.Unmarshal(m, b)
}
func (m *FleetService_ShareRideSerivce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FleetService_ShareRideSerivce.Marshal(b, m, deterministic)
}
func (m *FleetService_ShareRideSerivce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FleetService_ShareRideSerivce.Merge(m, src)
}
func (m *FleetService_ShareRideSerivce) XXX_Size() int {
	return xxx_messageInfo_FleetService_ShareRideSerivce.Size(m)
}
func (m *FleetService_ShareRideSerivce) XXX_DiscardUnknown() {
	xxx_messageInfo_FleetService_ShareRideSerivce.DiscardUnknown(m)
}

var xxx_messageInfo_FleetService_ShareRideSerivce proto.InternalMessageInfo

func (m *FleetService_ShareRideSerivce) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *FleetService_ShareRideSerivce) GetOccupiedSeats() int32 {
	if m != nil {
		return m.OccupiedSeats
	}
	return 0
}

func (m *FleetService_ShareRideSerivce) GetAvailableSeats() int32 {
	if m != nil {
		return m.AvailableSeats
	}
	return 0
}

func (m *FleetService_ShareRideSerivce) GetNonSmoking() bool {
	if m != nil {
		return m.NonSmoking
	}
	return false
}

func (m *FleetService_ShareRideSerivce) GetPricePerKm() int32 {
	if m != nil {
		return m.PricePerKm
	}
	return 0
}

type FleetService_DeliverSerivce struct {
	Item                 string   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Unit                 string   `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Num                  int32    `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Avail                int32    `protobuf:"varint,4,opt,name=avail,proto3" json:"avail,omitempty"`
	DemandIds            []int64  `protobuf:"varint,5,rep,packed,name=demand_ids,json=demandIds,proto3" json:"demand_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FleetService_DeliverSerivce) Reset()         { *m = FleetService_DeliverSerivce{} }
func (m *FleetService_DeliverSerivce) String() string { return proto.CompactTextString(m) }
func (*FleetService_DeliverSerivce) ProtoMessage()    {}
func (*FleetService_DeliverSerivce) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f79d0ca0aea0c, []int{0, 1}
}

func (m *FleetService_DeliverSerivce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FleetService_DeliverSerivce.Unmarshal(m, b)
}
func (m *FleetService_DeliverSerivce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FleetService_DeliverSerivce.Marshal(b, m, deterministic)
}
func (m *FleetService_DeliverSerivce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FleetService_DeliverSerivce.Merge(m, src)
}
func (m *FleetService_DeliverSerivce) XXX_Size() int {
	return xxx_messageInfo_FleetService_DeliverSerivce.Size(m)
}
func (m *FleetService_DeliverSerivce) XXX_DiscardUnknown() {
	xxx_messageInfo_FleetService_DeliverSerivce.DiscardUnknown(m)
}

var xxx_messageInfo_FleetService_DeliverSerivce proto.InternalMessageInfo

func (m *FleetService_DeliverSerivce) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

func (m *FleetService_DeliverSerivce) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *FleetService_DeliverSerivce) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *FleetService_DeliverSerivce) GetAvail() int32 {
	if m != nil {
		return m.Avail
	}
	return 0
}

func (m *FleetService_DeliverSerivce) GetDemandIds() []int64 {
	if m != nil {
		return m.DemandIds
	}
	return nil
}

type Fleet struct {
	VehicleId            int32           `protobuf:"varint,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Status               int32           `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Coord                *Fleet_Coord    `protobuf:"bytes,3,opt,name=coord,proto3" json:"coord,omitempty"`
	Angle                float32         `protobuf:"fixed32,4,opt,name=angle,proto3" json:"angle,omitempty"`
	Speed                int32           `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	Services             []*FleetService `protobuf:"bytes,6,rep,name=services,proto3" json:"services,omitempty"`
	Demands              []int32         `protobuf:"varint,7,rep,packed,name=demands,proto3" json:"demands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Fleet) Reset()         { *m = Fleet{} }
func (m *Fleet) String() string { return proto.CompactTextString(m) }
func (*Fleet) ProtoMessage()    {}
func (*Fleet) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f79d0ca0aea0c, []int{1}
}

func (m *Fleet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fleet.Unmarshal(m, b)
}
func (m *Fleet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fleet.Marshal(b, m, deterministic)
}
func (m *Fleet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fleet.Merge(m, src)
}
func (m *Fleet) XXX_Size() int {
	return xxx_messageInfo_Fleet.Size(m)
}
func (m *Fleet) XXX_DiscardUnknown() {
	xxx_messageInfo_Fleet.DiscardUnknown(m)
}

var xxx_messageInfo_Fleet proto.InternalMessageInfo

func (m *Fleet) GetVehicleId() int32 {
	if m != nil {
		return m.VehicleId
	}
	return 0
}

func (m *Fleet) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Fleet) GetCoord() *Fleet_Coord {
	if m != nil {
		return m.Coord
	}
	return nil
}

func (m *Fleet) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *Fleet) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Fleet) GetServices() []*FleetService {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Fleet) GetDemands() []int32 {
	if m != nil {
		return m.Demands
	}
	return nil
}

type Fleet_Coord struct {
	Lat                  float32  `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float32  `protobuf:"fixed32,2,opt,name=lon,proto3" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fleet_Coord) Reset()         { *m = Fleet_Coord{} }
func (m *Fleet_Coord) String() string { return proto.CompactTextString(m) }
func (*Fleet_Coord) ProtoMessage()    {}
func (*Fleet_Coord) Descriptor() ([]byte, []int) {
	return fileDescriptor_464f79d0ca0aea0c, []int{1, 0}
}

func (m *Fleet_Coord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fleet_Coord.Unmarshal(m, b)
}
func (m *Fleet_Coord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fleet_Coord.Marshal(b, m, deterministic)
}
func (m *Fleet_Coord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fleet_Coord.Merge(m, src)
}
func (m *Fleet_Coord) XXX_Size() int {
	return xxx_messageInfo_Fleet_Coord.Size(m)
}
func (m *Fleet_Coord) XXX_DiscardUnknown() {
	xxx_messageInfo_Fleet_Coord.DiscardUnknown(m)
}

var xxx_messageInfo_Fleet_Coord proto.InternalMessageInfo

func (m *Fleet_Coord) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Fleet_Coord) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func init() {
	proto.RegisterType((*FleetService)(nil), "api.fleet.FleetService")
	proto.RegisterType((*FleetService_ShareRideSerivce)(nil), "api.fleet.FleetService.ShareRideSerivce")
	proto.RegisterType((*FleetService_DeliverSerivce)(nil), "api.fleet.FleetService.DeliverSerivce")
	proto.RegisterType((*Fleet)(nil), "api.fleet.Fleet")
	proto.RegisterType((*Fleet_Coord)(nil), "api.fleet.Fleet.Coord")
}

func init() { proto.RegisterFile("fleet/fleet.proto", fileDescriptor_464f79d0ca0aea0c) }

var fileDescriptor_464f79d0ca0aea0c = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xe1, 0x6e, 0xd3, 0x30,
	0x10, 0xc7, 0x69, 0xb3, 0x74, 0xcd, 0x75, 0x94, 0x61, 0xa1, 0x11, 0x55, 0x42, 0x44, 0x93, 0x80,
	0x08, 0xa6, 0x54, 0xea, 0xde, 0xa0, 0x20, 0x44, 0xc5, 0x17, 0xe4, 0x7e, 0xe3, 0x4b, 0xe4, 0xc6,
	0xb7, 0xd6, 0x5a, 0x62, 0x47, 0x76, 0x5a, 0xb1, 0x4f, 0xbc, 0x04, 0x2f, 0xc4, 0x0b, 0xf1, 0x0c,
	0xc8, 0x97, 0xa4, 0xb0, 0x49, 0xfb, 0x92, 0xdc, 0xfd, 0xf2, 0xf7, 0xf9, 0x7f, 0x17, 0x1b, 0x9e,
	0xdf, 0x94, 0x88, 0xcd, 0x9c, 0x9e, 0x59, 0x6d, 0x4d, 0x63, 0x58, 0x24, 0x6a, 0x95, 0x11, 0xb8,
	0xfc, 0x13, 0xc0, 0xd9, 0x67, 0x1f, 0xad, 0xd1, 0x1e, 0x54, 0x81, 0x6c, 0x05, 0xe0, 0x76, 0xc2,
	0x62, 0x6e, 0x95, 0xc4, 0x78, 0x90, 0x0c, 0xd2, 0xc9, 0x22, 0xcd, 0x8e, 0x0b, 0xb2, 0xff, 0xc5,
	0xd9, 0xda, 0x2b, 0xb9, 0x92, 0xb8, 0x46, 0xab, 0x0e, 0x05, 0x7e, 0x79, 0xc2, 0x23, 0xd7, 0x33,
	0xb6, 0x84, 0x53, 0x89, 0xa5, 0x3a, 0xa0, 0x8d, 0x87, 0x54, 0xe7, 0xed, 0x63, 0x75, 0x3e, 0xb5,
	0xb2, 0x7f, 0x55, 0xfa, 0x85, 0xb3, 0xdf, 0x03, 0x38, 0x7f, 0xb8, 0x0b, 0x9b, 0xc1, 0xb8, 0x10,
	0xb5, 0x28, 0x54, 0x73, 0x47, 0x0e, 0x43, 0x7e, 0xcc, 0xd9, 0x1b, 0x98, 0x9a, 0xa2, 0xd8, 0xd7,
	0x0a, 0x65, 0xee, 0x50, 0x34, 0x8e, 0xf6, 0x0e, 0xf9, 0xd3, 0x9e, 0xae, 0x3d, 0x64, 0xef, 0xe0,
	0x99, 0x38, 0x08, 0x55, 0x8a, 0x4d, 0x89, 0x9d, 0x2e, 0x20, 0xdd, 0xf4, 0x88, 0x5b, 0xe1, 0x6b,
	0x98, 0x68, 0xa3, 0x73, 0x57, 0x99, 0x5b, 0xa5, 0xb7, 0xf1, 0x49, 0x32, 0x48, 0xc7, 0x1c, 0xb4,
	0xd1, 0xeb, 0x96, 0xb0, 0x04, 0xce, 0x6a, 0xab, 0x0a, 0xcc, 0x6b, 0xb4, 0xf9, 0x6d, 0x15, 0x87,
	0x54, 0x06, 0x88, 0x7d, 0x43, 0xfb, 0xb5, 0x9a, 0xfd, 0x84, 0xe9, 0xfd, 0x06, 0x19, 0x83, 0x13,
	0xd5, 0x60, 0x45, 0xe6, 0x23, 0x4e, 0xb1, 0x67, 0x7b, 0xad, 0x1a, 0xb2, 0x1b, 0x71, 0x8a, 0xd9,
	0x39, 0x04, 0x7a, 0x5f, 0x75, 0xce, 0x7c, 0xc8, 0x5e, 0x40, 0x48, 0x06, 0xc9, 0x48, 0xc8, 0xdb,
	0x84, 0xbd, 0x02, 0x90, 0x58, 0x09, 0x2d, 0x73, 0x25, 0x5d, 0x1c, 0x26, 0x41, 0x1a, 0xf0, 0xa8,
	0x25, 0x2b, 0xe9, 0x96, 0x00, 0xe3, 0x1b, 0xd7, 0x8e, 0xfa, 0xf2, 0xd7, 0x10, 0x42, 0x9a, 0xbd,
	0x5f, 0x74, 0xc0, 0x9d, 0x2a, 0x4a, 0xcc, 0x95, 0xec, 0xe6, 0x18, 0x75, 0x64, 0x25, 0xd9, 0x05,
	0x8c, 0x5c, 0x23, 0x9a, 0x7d, 0x3f, 0xc0, 0x2e, 0x63, 0x57, 0x10, 0x16, 0xc6, 0x58, 0x49, 0xae,
	0x26, 0x8b, 0x8b, 0x87, 0xff, 0x34, 0xfb, 0xe8, 0xbf, 0xf2, 0x56, 0x44, 0x7e, 0xf5, 0xb6, 0x44,
	0xf2, 0x3b, 0xe4, 0x6d, 0xe2, 0xa9, 0xab, 0x11, 0x65, 0x37, 0xac, 0x36, 0x61, 0xd7, 0x30, 0xee,
	0x5c, 0xba, 0x78, 0x94, 0x04, 0xe9, 0x64, 0xf1, 0xf2, 0x91, 0x03, 0xc3, 0x8f, 0x42, 0x16, 0xfb,
	0x43, 0xe6, 0x1b, 0x75, 0xf1, 0x69, 0x12, 0xa4, 0x21, 0xef, 0xd3, 0xd9, 0x07, 0x08, 0xc9, 0x8a,
	0x9f, 0x62, 0x29, 0x1a, 0xea, 0x70, 0xc8, 0x7d, 0x48, 0xc4, 0x68, 0x6a, 0xcc, 0x13, 0xa3, 0x97,
	0x57, 0xdf, 0xdf, 0x6f, 0x55, 0xb3, 0xdb, 0x6f, 0xb2, 0xc2, 0x54, 0x73, 0x77, 0xa7, 0xd1, 0xe2,
	0x8f, 0xfe, 0x9d, 0x8b, 0xb2, 0xde, 0x89, 0xb9, 0xa8, 0x55, 0x7b, 0x8d, 0x36, 0x23, 0xba, 0x47,
	0xd7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x7f, 0xa1, 0x62, 0x5c, 0x03, 0x00, 0x00,
}
